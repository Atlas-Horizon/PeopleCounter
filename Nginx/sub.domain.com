# file location /etx/nginx/sites-enabled/sub.domain.com

server {

	# SSL configuration
	#
	listen 443 ssl ;
	listen [::]:443 ssl ;
    ssl_certificate /etc/letsencrypt/live/sub.domain.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/sub.domain.com/privkey.pem; # managed by Certbot
        
        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;

	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	#root /var/www/html;

	root /path/to/folder/LiveOccupancyCounter/internal;
	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;
    server_name sub.domain.com, servername.regionlocation.cloudapp.azure.com; # managed by Certbot


	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#alias //path/to/folder/LiveOccupancyCounter/public/
		try_files $uri $uri/ =404;
		proxy_pass http://localhost:8000/;
        	auth_basic "Login required";
		auth_basic_user_file /path/to/folder/dashboard/.htpasswd;
		add_header Access-Control-Allow-Origin *;
	}
	
	location /public/ {
	 	alias /path/to/folder/LiveOccupancyCounter/public/;
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
		proxy_pass http://localhost:8001/;
		add_header Access-Control-Allow-Origin *;

	}
	    
       location /dashboard/ {
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       		proxy_set_header Host $http_host;
	        proxy_set_header X-NginX-Proxy true;
       		proxy_set_header X-Script-Name /godash;
       		proxy_http_version 1.1;
       		proxy_set_header Upgrade $http_upgrade;
       		proxy_set_header Connection "upgrade";
       		proxy_max_temp_file_size 0;
	       	rewrite /dashboard/(.*) /dashboard/$1  break;
        	proxy_pass http://localhost:8002;
        	proxy_redirect off;
        	proxy_read_timeout 240s;
		
        	auth_basic "Login required";
		auth_basic_user_file /path/to/folder/dashboard/.htpasswd;
		add_header Access-Control-Allow-Origin *;
        }


server {
    if ($host = sub.domain.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    server_name sub.domain.com;
    return 404; # managed by Certbot



    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /path/to/folder/sub.domain.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /path/to/folder/sub.domain.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = sub.domain.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot




	listen 80 ;
	listen [::]:80 ;
    server_name sub.domain.com;
    return 404; # managed by Certbot


}